static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000       # слушаем на 10000 внутри контейнера
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: manifest_host
                      domains: [ "*" ]
                      routes:
                        - match:
                            prefix: "/"                # все пути
                          route:
                            cluster: manifest_service   # проксируем в кластер manifest_service
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        auth_provider:
                          issuer: "pluto-auth"          # должен совпадать с полем "iss" в JWT
                          remote_jwks:
                            http_uri:
                              uri: "http://auth-service:8081/auth/jwks.json"
                              cluster: auth_service
                              timeout: 5s
                            cache_duration:
                              seconds: 300               # кэшировать JWKS 5 минут
                          forward: true                  # переслать JWT дальше в upstream (если нужно)
                          payload_in_metadata: "jwt_payload"
                      rules:
                        - match:
                            prefix: "/auth/app-login"
                            requires: { }         # пустые кавычки → не требуем проверки
                        - match:
                            prefix: "/auth/jwks.json"
                          requires: { }
                        - match:
                            prefix: "/health"
                          requires: { }
                        - match:
                            prefix: "/"                # для всех путей требуем JWT
                          requires:
                            provider_name: "auth_provider"
                  - name: envoy.filters.http.router   # должен быть последним
  clusters:
    # Кластер для manifest-service
    - name: manifest_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: manifest_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: manifest-service   # DNS-имя контейнера в Docker Compose
                      port_value: 8080
      health_checks:
        - timeout: 1s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 1
          http_health_check:
            path: /health                # предполагается, что manifest-service имеет /health → 200
            host: "localhost"
    # Кластер для auth-service (для JWKS-запросов)
    - name: auth_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth-service
                      port_value: 8081
      health_checks:
        - timeout: 1s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 1
          http_health_check:
            path: /health                  # auth-service тоже должен иметь /health → 200
            host: "localhost"
admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901                  # порт админ-API Envoy (необязателен)