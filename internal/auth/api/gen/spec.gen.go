// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package gen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RWTW/bRhD9K4ttDy2gSP5IL7q5qNG6aRChadBDUxgMtbYYS+SGXAYxDAP6SOoANWLA",
	"6KGXpgj6B2jHihnJpP/Cm39U7JK2JXlVX+oCvVHi7M6beW/mcYe7QUcGvvBVxOs7PHJbouOYxxUpvws2",
	"Pf978SwWkdJ/yTCQIlSeMAFOs+kpL/Cd9vSvxlSU2paC13mkQs/f5LsV3hSRG3pSx/I6x2/IcY4cY2RI",
	"qY8hxrSPDAkdMKTI6CVy6uIMCf2ClA7YZ0ioS6/K4BH1aUBdJBVGXQzxHilyZAwpo34V59XPeeUCQ/Dk",
	"qXCVxuBIuf5chJHBsDML6RBD6lLPZMM5dZFijBwfMDQYNYQMSfnmTAdX2GO+WF2qLj/mE/kma37uuWLd",
	"a1qy/aUvxQhJUTj9io+68BOdjfpI6WXxmvq6EYwG1KM+dZHjo37CMRIboEeP1r6yYgkiC4jfLY1GjiOG",
	"t3hnr7fjuA8essW71UVr0bsVHopnsReKJq//NNEBg2Cagp8tFF3JL5KBHwmL/lxXRNG6CraEhcVvf/yB",
	"4QRjXchpiT6nHnIcM4zYSmPN1hzxQnqhiNY9my7ema6PGD4gxammjWlSMDLCSBiOGfWMJgfIcIKEXvEK",
	"3wjCjqN4nXu+Wl66Sur5SmyKUGeNRKT7YNWH5tFcSz0tSaQVhhHyQg00oDcMZ0acGXKGlHrFNNE+TnWt",
	"Wje0X8qYtYPNIFaToOLYUPLP5E11eqpJU9htNK6GYRDO51Do15ZWv8W5qSUxwzFkyOk1UhxhhPRGuMWl",
	"NjTfCKetWvPhRMpRcQHshdORbXN668aE5TFbxkb8pO2598T2/KTShKxvie3rjWis3r8jfDdoiiYr4piO",
	"uwnQxJXXQelgz98IzHb2lCmy0Y5VwFZi1WIPRahHtZyQyy3JF6sL1QWzQKTwHenxOl+uLlSXeYVLR7VM",
	"KTUnVq2aI+Wdtp5dU11QeIeu2NFVrTV5/XK6eYFbROrLoGnqdwNfCd8ccaRse645VHsaFau6MCj99Gko",
	"Nnidf1K7crBaaV+1We/anW6QCmNh/igoMdCXFhZuIX3Juck/u/fNqA7p9YXZJTQwlja99c0u1m2/+y8C",
	"nJ5KG7o/MMSxXvUXjjSxQzWaL/5TNIfIdHOMw2fI6MDY0+VKSIoF2S0RJ2YeorjTccJtffxPsxEHtKc/",
	"GmifGW84R85MlzO8N8cKf8v0B4XV9s2thcKL+bpTjuymsCj8a6EuZ5/fotauLxhLA+eskf8bj4elIAcX",
	"njbAEcZIae9CpSOM6Q3taSturN4vGGuZpT+XqMITbpOiGdexNObBvZlSiyPMbQl3Sx/Y/TsAAP//1ppM",
	"h6kLAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
