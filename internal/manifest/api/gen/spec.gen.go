// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package gen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
