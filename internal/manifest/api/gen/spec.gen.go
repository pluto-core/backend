// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package gen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//eUCnazIfAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
