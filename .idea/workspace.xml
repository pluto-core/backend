<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f2c15436-e0fc-43ef-8c03-1f679e0b39cb" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/api/gen/api.gen.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/api/gen/server.gen.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/api/gen/spec.gen.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/api/gen/types.gen.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/api/impl.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/config/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/manifest/config/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/manifest/db/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/2270bffa-de69-460c-bcfa-525a7f6fab0d.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/2270bffa-de69-460c-bcfa-525a7f6fab0d.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/2270bffa-de69-460c-bcfa-525a7f6fab0d/storage_v2/_src_/database/pluto.NCZdBg/schema/public.abK9xQ.meta" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/2270bffa-de69-460c-bcfa-525a7f6fab0d/storage_v2/_src_/database/pluto.NCZdBg/schema/public.abK9xQ.meta" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/openapi/auth.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/api/openapi/auth.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/.helmignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/Chart.lock" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/Chart.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/charts/postgresql-16.1.0.tgz" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/files/envoy.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/files/manifest.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/NOTES.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/_helpers.tpl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/envoy-configmap.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/envoy-deployment.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/envoy-service.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/hpa.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/manifest-configmap.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/manifest-deployment.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/manifest-service.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/migrate-job.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/serviceaccount.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/swagger-spec-configmap.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/swaggerui-deployment.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/swaggerui-service.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/templates/tests/test-connection.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/charts/pluto-backend/values.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/auth-service/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/auth-service/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/auth.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/configs/auth.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/manifest.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/configs/manifest.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/domain/domain.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/handlers/handlers.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/middleware/middleware.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/manifest/bootstrap/bootstrap.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/manifest/bootstrap/bootstrap.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/manifest/domain/domain.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/platform/db/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/platform/db/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/platform/logger/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/platform/logger/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/platform/router/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/platform/router/router.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="repository" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/Cellar/go/1.23.0/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;EYadroshnikov&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:pluto-core/backend.git&quot;,
    &quot;accountId&quot;: &quot;a37be9ca-a411-4674-8141-6745418940e2&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;configuredContexts&quot;: [
    {
      &quot;name&quot;: &quot;orbstack&quot;,
      &quot;kubeConfigUrl&quot;: &quot;file:///Users/eyadroshnikov/.kube/config&quot;
    }
  ],
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2wJg8kdID5ZD0w41APNOhCab1fT" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Docker.deploy/docker-compose.local.yml.nginx: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.deploy/docker-compose.local.yml.vault: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.deploy/docker-compose.local.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build Debug MyApp.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build main.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build main.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build pluto-backend/cmd/migrate.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.build.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.generate.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.manifest-db-generate.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.manifest-migrate.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.run-auth.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.run-manifest.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;database.data.extractors.current.export.id&quot;: &quot;SQL Inserts&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/eyadroshnikov/Developer/Pluto/pluto-backend/charts/pluto-backend/files&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;goland.project.structure&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/eyadroshnikov/Applications/GoLand.app/Contents/plugins/javascript-plugin/jsLanguageServicesImpl/external&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/charts/pluto-backend/files" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/charts/pluto-backend/templates" />
      <recent name="$PROJECT_DIR$/internal/platform/errors" />
      <recent name="$PROJECT_DIR$/internal/manifest/api" />
      <recent name="$PROJECT_DIR$/api/auth" />
      <recent name="$PROJECT_DIR$/api/manifest" />
    </key>
  </component>
  <component name="RunManager" selected="Makefile Target.run-manifest">
    <configuration name="go build Debug MyApp" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="pluto-backend" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="VAULT_TOKEN" value="root" />
      </envs>
      <kind value="DIRECTORY" />
      <package value="pluto-backend" />
      <directory value="$PROJECT_DIR$/cmd/manifest-service" />
      <filePath value="$PROJECT_DIR$/../pluto-backend|$PROJECT_DIR$/cmd/manifest-service/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build pluto-backend/cmd/migrate" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pluto-backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="pluto-backend/cmd/migrate" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/migrate/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="build" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="build" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="run-manifest" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="run-manifest" workingDirectory="" arguments="">
        <envs>
          <env name="VAULT_TOKEN" value="root" />
        </envs>
      </makefile>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="deploy/docker-compose.local.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="deploy/docker-compose.local.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="deploy/docker-compose.local.yml.vault: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="vault" />
            </list>
          </option>
          <option name="sourceFilePath" value="deploy/docker-compose.local.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.deploy/docker-compose.local.yml.vault: Compose Deployment" />
      <item itemvalue="Docker.deploy/docker-compose.local.yml: Compose Deployment" />
      <item itemvalue="Go Build.go build Debug MyApp" />
      <item itemvalue="Go Build.go build pluto-backend/cmd/migrate" />
      <item itemvalue="Makefile Target.build" />
      <item itemvalue="Makefile Target.run-manifest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile Target.run-manifest" />
        <item itemvalue="Makefile Target.build" />
        <item itemvalue="Go Build.go build pluto-backend/cmd/migrate" />
        <item itemvalue="Docker.deploy/docker-compose.local.yml: Compose Deployment" />
        <item itemvalue="Docker.deploy/docker-compose.local.yml.vault: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-34ac7aa8f6ab-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.23774.430" />
        <option value="bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-GO-251.23774.430" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f2c15436-e0fc-43ef-8c03-1f679e0b39cb" name="Changes" comment="" />
      <created>1741593348374</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1741593348374</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/manifest/db/provider.go</url>
          <line>70</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>