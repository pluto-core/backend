name: Build & Deploy Pluto Services

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AUTH_IMAGE: ghcr.io/${{ secrets.GHCR_USERNAME }}/pluto-auth
  MANIFEST_IMAGE: ghcr.io/${{ secrets.GHCR_USERNAME }}/pluto-manifest

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-auth:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-auth.outputs.cache-hit-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN || github.token }}

      - name: Cache Docker layers (auth)
        id: cache-auth
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-auth
          key: build-auth-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            build-auth-${{ runner.os }}-

      - name: Build & Push auth-service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/dockerfiles/auth.Dockerfile
          push: true
          tags: |
            ${{ env.AUTH_IMAGE }}:latest
            ${{ env.AUTH_IMAGE }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache-auth
          cache-to: type=local,dest=/tmp/.buildx-cache-auth-new,mode=max
          outputs: type=local,dest=/tmp/.buildx-cache-auth-new

      - name: Update cache (auth)
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache-auth
          mv /tmp/.buildx-cache-auth-new /tmp/.buildx-cache-auth

  build-manifest:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-manifest.outputs.cache-hit-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN || github.token }}

      - name: Cache Docker layers (manifest)
        id: cache-manifest
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-manifest
          key: build-manifest-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            build-manifest-${{ runner.os }}-

      - name: Build & Push manifest-service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/dockerfiles/manifest.Dockerfile
          push: true
          tags: |
            ${{ env.MANIFEST_IMAGE }}:latest
            ${{ env.MANIFEST_IMAGE }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache-manifest
          cache-to: type=local,dest=/tmp/.buildx-cache-manifest-new,mode=max
          outputs: type=local,dest=/tmp/.buildx-cache-manifest-new

      - name: Update cache (manifest)
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache-manifest
          mv /tmp/.buildx-cache-manifest-new /tmp/.buildx-cache-manifest

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-auth, build-manifest ]
    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ secrets.DOCKER_COMPOSE_DIR }}

            # Login to GHCR
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

            # Pull latest images
            docker pull ${{ env.AUTH_IMAGE }}:latest
            docker pull ${{ env.MANIFEST_IMAGE }}:latest

            # Restart services
            docker-compose down || true
            docker-compose up -d

            # Cleanup
            docker image prune -f